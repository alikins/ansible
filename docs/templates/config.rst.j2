{% set name = 'Configuration' -%}
{% set name_slug = 'config' -%}

{% set name_len = name|length + 0-%}
{{ '=' * name_len }}
{{name}}
{{ '=' * name_len }}


.. contents::
   :local:
   :depth: 2


{% macro show_config(config_option, config) -%}
{% set config_len = config_option|length -%}
.. _{{config['slug_label']}}:
{# .. _{{config['name']}}: #}
{# .. _{{config_option}}: #}
{# {{config_option}} #}

{{config['name']}}
{% set config_name_len = config['name']|length %}
{{ '-' * config_name_len}}

{% if config['description'] and config['description'] != [''] %}
{% if config['description'] != ['TODO: write it'] %}
:Description: {{' '.join(config['description'])}}
{% endif %}
{% endif %}
:ID: {{config_option}}
{% if config['type'] %}
:Type: {{config['type']}}
{% endif %}
:Default: {{config['default']}}
{% if config['version_added'] %}
:Version Added: {{config['version_added']}}
{% endif %}
{% for ini_map in config['ini']|sort %}
:Ini Section: {{ini_map['section']}}
:Ini Key: {{ini_map['key']}}
{% endfor %}
{% for env_var_map in config['env']|sort %}
:Environment: :envvar:`{{env_var_map['name']}}`
{% endfor %}
{% if config['deprecated'] %}
:Deprecated in: {{config['deprecated']['version']}}
:Deprecated detail: {{config['deprecated']['why']}}
:Deprecated alternatives: {{config['deprecated']['alternatives']}}
{% endif %}
{%- endmacro %}


{% if config_options %}
Config Options
==============


{% for config_option in config_options|sort %}
{% set config = config_options[config_option] %}
{% if 'deprecated' not in config %}
{{ show_config(config_option, config) }}
{% endif %}
{% endfor %}


Deprecated Config Options
=========================


{% for config_option in config_options|sort %}
{% set config = config_options[config_option] %}
{% if 'deprecated' in config %}
{{ show_config(config_option, config) }}
{% endif %}
{% endfor %}


Environment Variables
=====================

.. envvar:: ANSIBLE_CONFIG


    Override the default ansible config file


{% for config_option in config_options %}
{% set config = config_options[config_option] %}
{% for env_var_map in config['env'] %}
.. envvar:: {{env_var_map['name']}}

{% if config['description']  and config['description'] != [''] %}
{% if config['description'] != ['TODO: write it'] %}
    {{ ''.join(config['description']) }}
{% endif %}
{% endif %}

    See also :ref:`{{config['slug_label']}} <{{config['slug_label']}}>`

{% endfor %}
{% endfor %}

{% endif %}
