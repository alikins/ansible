
== Use cases ==

Constants:
* Alice is using a latin1 locale
* Bob is using a utf8 locale

Potential solutions:
* Ansible-2.1 describes the 2.1.x (and most of 2.2.0 code base where the password is read as bytes and then passed through to the VaultLib unmodified

* Ansible-2.UTF8 describes an Ansible where vault passwords are transformed to utf8 before being used to encode a file.  At the password prompt, the password is decoded to text using the user's locale, and then encoded to utf8 when it is passed to the VaultLib API.  A new command line option is added, --vault-password-from-encoding which allows overriding the user's locale encoding with one chosen by the user (useful in case they receive a vault password file from another user).  ansible-vault rekey also gains a new command line option to allow migrating a previous ansible vault to one where the password is always encoded with utf8

* Ansible-2.1-encoding describes the 2.1.x style of passing bytes all the way through the system with the addition of two CLI arguments, --vault-password-from-encoding and --vault-password-to-encoding. If vault-password-to-encoding is specified, then ansible will attempt to encode the password to that encoding before applying it to the password file.  In order to work, --vault-password-to-encodng must have a vault-password-from-encoding, however, the default is to use the encoding specified by the locale so this only needs to be set explicitly when the input source encoding does not match with the locale (for instance, when using a vault-password-file from another user).


== Use case 1 ==
* Alice encrypts a vault file using the word "café".
* Alice tells Bob to use the password "café" to access the vault file
* When Bob types in "café" at the prompt, he is able to access the vault file

Analysis:
* Does not work in Ansible-2.1.  Bob can only make this work by being able to enter latin1 bytes at the password prompt, probably by changing his locale.  But this may have other side effects.
* Would work in Ansible-2.UTF8 out of the box
* Ansible-2.1-encodng works when Bob specifies --vault-password-to-encoding='latin1'


== Use case 2 ==
* Alice has a vault file that she encrypted using the word "café" on previous Ansible
* Alice updates to Ansible-2.1/Ansible2.UTF8/Ansible2.1-encoding
* Alice can use her vault-file with her password

Analysis:
* Works on Ansible-2.0 to Ansible-2.1
* For Ansible-2.1 to Ansible-2.UTF8, Alice would need to run ansible-vault rekey --from-encoding=latin1 to rekey her vault once she upgrades to Ansible-2.UTF8.
  * From then on Alice can type "café" at the vault password prompt when asked for a password and it will just work
* For Ansible-2.1 to Ansible2.1-encoding, this works out of the box


== Use case 3 ==
* Alice is using Ansible-2.UTF8/Ansible2.1-encoding
* Alice encrypts a vault file using the word "café".
* Alice puts the vault password into a file, vault-pass.
* Alice can then use ansible --vault-password-file vault-pass

Analysis:
* This should work on Ansible-2.UTF8 will decode the input into text using the user's locale and then encode it using utf8
* This should work on Ansible2.1-encoding as the bytes read into the file are passed through verbatim

== Use case 4 ==
* Alice encrypts a vault file using the word "café"
* Alice puts the vault password into a file, vault-pass
* Alice gives the vault-pass file to Bob
* Bob can then use ansible --vault-password-file vault-pass

Analysis:
* With Ansible-2.1, this works out of the box
* With Ansible-2.UTF8, Bob must use iconv -f latin1 -t utf8 vault-pass to re-encode the file's contents as utf8
  * Bob can then use ansible --vault-password-file vault-pass as normal
* With Ansible2.1-encoding, this works out of the box.

== Use case 5 ==
* Alice has a vault file that she encrypted on Ansible-2.UTF8/Ansible2.1-encoding
* Alice wants to share the vault file with Bob who is using Ansible 2.1

Analysis:
* With Ansible-2.UTF8 this will work out of the box because Bob's locale is utf8
* With Ansible2.1-encoding this works out of the box as both versions pass the vault password through as unmodified bytes.

== Use case 6 ==
* Bob has a vault file that he encrypted on Ansible-2.UTF8/Ansible2.1-encoding
* Bob wants to share the vault file with Alice who is using Ansible 2.1

Analysis:
* With Ansible-2.UTF8, this will not work as Alice's locale is latin1 based and there is no facility in Ansible-2.1 to handle this.  Alice can run ansible using an alternate locale but this might have additional side effects.
* With Ansible2.1-encoding this will work out of the box as the bytes will be passed through unmodified.
